magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT", "STEP_NAME")) %>%
parameters_df <- dfs %>%
purrrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT", "STEP_NAME")) %>%
parameters_df <- dfs %>%
purrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
parameters_df <- dfs %>%
purrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT"))
parameters_df <- dfs %>%
purrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
View(steps_df)
View(parameters_df)
setwd("~/repos/Tesla-Analysis/bigquery/into_bigquery")
?insert_upload_job
setwd("~/repos/Tesla-Bigquery-ETL/upload_data/Submissions")
source('~/repos/Tesla-Bigquery-ETL/upload_data/Submissions/upload_roundx_variants.R', echo=TRUE)
df <- submission_df %>%
slice(1:10) %>%
dplyr::ungroup() %>%
dplyr::group_by(submissionId) %>%
dplyr::group_split() %>%
purrr::map(create_variant_tables) %>%
dplyr::bind_rows
df <- submission_df %>%
slice(1:10) %>%
dplyr::ungroup() %>%
dplyr::group_by(submissionId) %>%
dplyr::group_split() %>%
purrr::map(create_variant_tables) %>%
dplyr::bind_rows()
View(df)
insert_upload_job("neoepitopes", "Version_3", "TEST_Variants", df)
View(df)
source('~/repos/Tesla-Bigquery-ETL/upload_data/Submissions/upload_roundx_variants.R', echo=TRUE)
df
insert_upload_job("neoepitopes", "Version_3", "TEST_Variants", df)
?bq_table_load
ds <- bq_dataset("neoepitopes", "Version_3")
ds
tbl <- bq_table("neoepitopes", "Version_3", table = "TEST_Variants")
tbl
bq_table_upload(tbl, df)
df <- submission_df %>%
slice(11:12) %>%
dplyr::ungroup() %>%
dplyr::group_by(submissionId) %>%
dplyr::group_split() %>%
purrr::map(create_variant_tables) %>%
dplyr::bind_rows()
tbl <- bq_table("neoepitopes", "Version_3", table = "TEST_Variants")
bq_table_upload(tbl, df)
bq_table_load(tbl, df)
bq_table_load(tbl, df, write_disposition = "WRITE_APPEND")
bq_table_upload(tbl, df, write_disposition = "WRITE_APPEND")
bq_table_upload(tbl, df, write_disposition = "WRITE_APPEND")
source('~/repos/Tesla-Bigquery-ETL/upload_data/Submissions/upload_roundx_yamls.R', echo=TRUE)
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
parameter_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Parameters")
bq_table_upload(parameter_tbl, parameters_df, write_disposition = "WRITE_APPEND")
View(steps_df)
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(comment = if_else(comment == "NA", NA, comment))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(comment = purrr::map(comment, ~dplyr::if_else(x == "NA", NA, x)))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(comment = purrr::map(comment, ~dplyr::if_else(.x == "NA", NA, .x)))
?if_else
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(comment = purrr::map(comment, function(c) dplyr::if_else(c == "NA", NA, c)))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(comment = purrr::map(comment, function(com) dplyr::if_else(com == "NA", NA, com)))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(comment = purrr::map(comment, function(com) ifelse(com == "NA", NA, com)))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = purrr::map(COMMENT, function(com) ifelse(com == "NA", NA, com)))
View(steps_df)
steps_df
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT"))
steps_df
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = purrr::map(COMMENT, function(com) if_else(com == "NA", NA, com)))
?if_else
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = purrr::map(COMMENT, function(com) ifelse(com == "NA", NA, com)))
?ifelse
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = purrr::map(COMMENT, function(com) change_to_na(com)))
change_to_na <- function(string){
if(string == "NA") string <- NA
else string <- string
return(string)
}
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = purrr::map(COMMENT, function(com) change_to_na(com)))
View(steps_df)
steps_df
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = change_to_na(com))
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = change_to_na(COMMENT))
change_to_na <- function(string){
if(string == "NA") string <- NA
else string <- string
print(string)
return(string)
}
change_to_na <- function(string){
print("###")
print(string)
if(string == "NA") string <- NA
else string <- string
print(string)
return(string)
}
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = map(COMMENT, change_to_na))
View(steps_df)
steps_df
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT2 = map(COMMENT, change_to_na))
change_to_na <- function(string){
print("###")
print(string)
if(string == "NA") string <- NA
else string <- string
print(string)
return(string)
}
View(steps_df)
steps_df
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT2 = map(COMMENT, change_to_na)) %>%
unnest()
View(steps_df)
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT2 = map(COMMENT, change_to_na)) %>%
tidyr::unnest()
change_to_na <- function(string){
if(string == "NA") string <- NA
else string <- string
return(string)
}
parameters_df <- dfs %>%
purrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
View(parameters_df)
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
parameter_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Parameters")
bq_table_upload(parameter_tbl, parameters_df, write_disposition = "WRITE_APPEND")
bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
errors
errors()
errors([]
errors[]
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
res
source('~/repos/Tesla-Bigquery-ETL/upload_data/Submissions/upload_roundx_yamls.R', echo=TRUE)
dfs <- submission_df %>%
slice(300:310) %>%
dplyr::ungroup() %>%
dplyr::group_by(submissionId) %>%
dplyr::group_split() %>%
purrr::map(create_yaml_tables)
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT2 = map(COMMENT, change_to_na)) %>%
tidyr::unnest()
change_to_na <- function(string){
if(string == "NA") string <- NA
else string <- string
return(string)
}
parameters_df <- dfs %>%
purrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
parameter_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Parameters")
change_to_na <- function(string){
if(string == "NA") string <- NA
else string <- string
return(string)
}
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT2 = map(COMMENT, change_to_na)) %>%
tidyr::unnest()
parameters_df <- dfs %>%
purrr::map("parameters_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, name, relationship, values, value, unit) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"PARAMETER_NAME",
"RELATIONSHIP",
"VALUES",
"VALUE",
"UNIT"))
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT"))
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
View(steps_df)
steps_df
source('~/repos/Tesla-Bigquery-ETL/upload_data/Submissions/upload_roundx_yamls.R', echo=TRUE)
source('~/repos/Tesla-Bigquery-ETL/upload_data/Submissions/upload_roundx_yamls.R', echo=TRUE)
steps_df <- dfs %>%
purrr::map("steps_df") %>%
dplyr::bind_rows() %>%
dplyr::select(SUBMISSION_ID, step, used, changed, comment) %>%
magrittr::set_colnames(c(
"SUBMISSION_ID",
"STEP_NAME",
"USED",
"CHANGED",
"COMMENT")) %>%
dplyr::mutate(COMMENT = map(COMMENT, change_to_na)) %>%
tidyr::unnest()
View(steps_df)
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
step_tbl <- bq_table("neoepitopes", "Version_3", table = "T_Steps")
res <- bq_table_upload(step_tbl, steps_df, write_disposition = "WRITE_APPEND")
write_csv(steps_df, "roundx_steps.csv")
write_csv(parameters_df, "roundx_parameters.csv")
getwd()
setwd("~/repos/Tesla-Bigquery-ETL/upload_data/Submissions")
